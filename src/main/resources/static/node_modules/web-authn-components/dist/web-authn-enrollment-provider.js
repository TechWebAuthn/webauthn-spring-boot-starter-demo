export class WebAuthnEnrollmentProvider extends HTMLElement{constructor(){super(),this.root=this.attachShadow({mode:"open"}),this._onFormSubmitListener=this._onFormSubmit.bind(this),this.enrollmentTokenUrl="/api/registration/add",this.fetchOptions={method:"GET",credentials:"include",headers:{"Content-Type":"application/json"}}}static get observedAttributes(){return["label","input-type","input-name","button-text"]}connectedCallback(){this.update(),this.root.querySelector("form").addEventListener("submit",this._onFormSubmitListener)}disconnectedCallback(){this.root.querySelector("form").removeEventListener("submit",this._onFormSubmitListener)}attributeChangedCallback(t,e,n){if(!this.root.innerHTML)return;if(n===e)return;this.root.querySelector("button").textContent=n||this.buttonText}update(){this.root.innerHTML||(this.root.innerHTML=`\n        <form part="form">\n          <button part="button" type="submit">${this.buttonText}</button>\n        </form>\n      `)}get buttonText(){return this.getAttribute("button-text")||"Connect"}set buttonText(t){this.setAttribute("button-text",t)}async _onFormSubmit(t){t.preventDefault(),this.dispatchEvent(new CustomEvent("enrollment-requested"));try{const t=await fetch(this.enrollmentTokenUrl,this.fetchOptions),e=await t.json();if(!t.ok)throw new Error("Could not successfuly retrieve enrollment token");this.dispatchEvent(new CustomEvent("enrollment-provided",{detail:e}))}catch(t){this.dispatchEvent(new CustomEvent("enrollment-error",{detail:{message:t.message}}))}}}customElements.define("web-authn-enrollment-provider",WebAuthnEnrollmentProvider);
