export class WebSocketConnection{constructor(e="",n=!0){return this.ws=new WebSocket(`${n?"wss":"ws"}://${window.location.host}${e}`),this.ws.addEventListener("open",this._onOpen.bind(this)),this.queue=[],this}send(e){switch(this.ws.readyState){case 0:this.queue.push(e);break;case 1:this.ws.send(JSON.stringify(e))}}listen(e,n){this.ws.addEventListener(e,(e=>{try{n(e,JSON.parse(e.data))}catch(t){n(e,null)}}))}_onOpen(){for(;this.queue.length>0;)this.send(this.queue.shift())}close(){this.ws.close()}}export class WebRTCConnection{constructor(e,n={iceServers:[{urls:"stun:stun.services.mozilla.com"}]}){return this.signaling=e,this.listenForSignalingEvents(),this.peerConnection=new RTCPeerConnection(n),this.listenForICECandidates(),this.dataQueue=[],this}createDataChannel(e="dataChannel",n={reliable:!0,ordered:!0}){this.dataChannel||(this.dataChannel=this.peerConnection.createDataChannel(e,n),this._attachDataEventListeners())}sendData(e){this.dataChannel||this.createDataChannel(),"open"===this.dataChannel.readyState?this.dataChannel.send(e):this.dataQueue.push(e)}listenForICECandidates(){this.peerConnection.addEventListener("icecandidate",this._onIceCandidate.bind(this))}listenForSignalingEvents(){this.signaling.listen("message",((e,n)=>n?.code?this.oncode?.(n?.code):(n?.user&&this.onuser?.(n?.user),"offer"===n?.event?this.createAnswer(n?.data):"answer"===n?.event?this._onAnswer(n?.data):"candidate"===n?.event?this._onReceiveIceCandidate(n?.data):void 0)))}listenForData(){this.peerConnection.addEventListener("datachannel",(e=>{const{channel:n}=e;this.dataChannel||(this.dataChannel=n),this._attachDataEventListeners()}))}async createOffer(){try{const e=await this.peerConnection.createOffer();this.signaling.send({event:"offer",data:e}),this.peerConnection.setLocalDescription(e)}catch(e){console.info("RTC Offer",e)}}async createAnswer(e){try{this.peerConnection.setRemoteDescription(new RTCSessionDescription(e));const n=await this.peerConnection.createAnswer();this.peerConnection.setLocalDescription(n),this.signaling.send({event:"answer",data:n})}catch(e){console.info("RTC Answer",e)}}close(){this.signaling.close(),this.peerConnection.close()}_onIceCandidate(e){e.candidate?this.signaling.send({event:"candidate",data:e.candidate}):console.info("All candidates registered")}_onAnswer(e){this.peerConnection.setRemoteDescription(new RTCSessionDescription(e))}_onReceiveIceCandidate(e){this.peerConnection.addIceCandidate(new RTCIceCandidate(e))}_onDataChannelOpen(){for(;this.dataQueue.length;)this.sendData(this.dataQueue.shift())}_attachDataEventListeners(){this.dataChannel.onopen=e=>{this._onDataChannelOpen(),this.ondatachannelopen?.(e)},this.dataChannel.onmessage=e=>{this.ondatachannelmessage?.(e)}}}
