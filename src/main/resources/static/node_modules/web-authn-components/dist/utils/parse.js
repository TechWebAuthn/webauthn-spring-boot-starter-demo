export function base64UrlStringToUint8Array(e){if(!e)return null;const r="==".slice(0,(4-e.length%4)%4),t=e.replace(/-/g,"+").replace(/_/g,"/")+r,n=window.atob(t);return Uint8Array.from(n,(e=>e.charCodeAt(0)))}export function arrayBufferToBase64UrlString(e){if(!e)return null;const r=[];for(const t of new Uint8Array(e))r.push(String.fromCharCode(t));return window.btoa(r.join("")).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}export function encodeRegisterCredential(e){return{id:e.id,type:e.type,rawId:arrayBufferToBase64UrlString(e.rawId),response:{attestationObject:arrayBufferToBase64UrlString(e.response.attestationObject),clientDataJSON:arrayBufferToBase64UrlString(e.response.clientDataJSON)},clientExtensionResults:e.getClientExtensionResults()}}export function encodeLoginCredential(e){return{id:e.id,type:e.type,rawId:arrayBufferToBase64UrlString(e.rawId),response:{authenticatorData:arrayBufferToBase64UrlString(e.response.authenticatorData),clientDataJSON:arrayBufferToBase64UrlString(e.response.clientDataJSON),signature:arrayBufferToBase64UrlString(e.response.signature),userHandle:arrayBufferToBase64UrlString(e.response.userHandle)},clientExtensionResults:e.getClientExtensionResults()}}export function decodePublicKeyCredentialCreateOptions(e){return{...e,user:{...e.user,id:base64UrlStringToUint8Array(e.user.id)},challenge:base64UrlStringToUint8Array(e.challenge),excludeCredentials:(e.excludeCredentials||[]).map((e=>({...e,id:base64UrlStringToUint8Array(e.id)})))}}export function decodePublicKeyCredentialRequestOptions(e){return{...e,challenge:base64UrlStringToUint8Array(e.challenge),allowCredentials:(e.allowCredentials||[]).map((e=>({...e,id:base64UrlStringToUint8Array(e.id)})))}}